{"version":3,"sources":["charts/topics.js","download-csv.PNG","copy-sheet.PNG","select-graph.PNG","drag-drop.PNG","App.js","serviceWorker.js","index.js"],"names":["RadarMap","props","state","data","className","this","options","maintainAspectRatio","responsive","Component","App","useState","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","topicsData","setTopicsData","e","a","preventDefault","dataTransfer","files","respond","text","split","slice","parseData","result","forEach","elem","row","push","titles","vals","href","role","aria-label","target","rel","to","smooth","duration","id","src","csheet","alt","dload","sgraph","ddrop","onDragOver","onDrop","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c49c837.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Radar } from 'react-chartjs-2';\r\n\r\nclass RadarMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"graph-wrapper\">\r\n                <Radar\r\n                    data={this.state.data}\r\n                    options={{ maintainAspectRatio: true, responsive: true }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadarMap;","export default __webpack_public_path__ + \"static/media/download-csv.059e807a.PNG\";","export default __webpack_public_path__ + \"static/media/copy-sheet.3eb071c7.PNG\";","export default __webpack_public_path__ + \"static/media/select-graph.2a7855c1.PNG\";","export default __webpack_public_path__ + \"static/media/drag-drop.459c56d7.PNG\";","import React, { useState } from 'react';\r\nimport RadarMap from './charts/topics';\r\n//import Horizontal from './charts/accuracy';\r\n//import HorizontalTwo from './charts/exp';\r\nimport dload from './download-csv.PNG';\r\nimport csheet from './copy-sheet.PNG';\r\nimport sgraph from './select-graph.PNG';\r\nimport ddrop from './drag-drop.PNG';\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\nimport { Link as SmoothLink } from 'react-scroll';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [topicsData, setTopicsData] = useState(\r\n    {\r\n      labels: ['example', 'example', 'example'],\r\n      datasets: [\r\n        {\r\n          label: 'My Questions',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          pointBackgroundColor: 'rgba(255,99,132,1)',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#fff',\r\n          pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: [1,2,3]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  /*const [expData, setexpData] = useState(\r\n    {\r\n      labels: ['My Attempts'],\r\n      datasets: [\r\n        {\r\n          label: 'Easy',\r\n          backgroundColor: 'rgba(140, 204, 92,0.2)',\r\n          borderColor: 'rgba(140, 204, 92,1)',\r\n          borderWidth: 1,\r\n          data: [68]\r\n        },\r\n        {\r\n          label: 'Medium',\r\n          backgroundColor: 'rgba(219, 158, 72,0.2)',\r\n          borderColor: 'rgba(219, 158, 72,1)',\r\n          borderWidth: 1,\r\n          data: [100]\r\n        },\r\n        {\r\n          label: 'Hard',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          data: [32]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  const [accuracyData, setAccuracyData] = useState(\r\n    {\r\n      labels: ['My Attempts'],\r\n      datasets: [\r\n        {\r\n          label: 'Total Attempts',\r\n          backgroundColor: 'rgba(92, 129, 204,0.2)',\r\n          borderColor: 'rgba(92, 129, 204,1)',\r\n          borderWidth: 1,\r\n          data: [100]\r\n        },\r\n        {\r\n          label: 'Solved',\r\n          backgroundColor: 'rgba(140, 204, 92,0.2)',\r\n          borderColor: 'rgba(140, 204, 92,1)',\r\n          borderWidth: 1,\r\n          data: [68]\r\n        },\r\n        {\r\n          label: 'Unsolved',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          data: [32]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  <Link to='/accuracy'><button className='btn-chart'><span role=\"img\" aria-label='target'>🎯</span> ACCURACY</button></Link>\r\n  <Link to='/work'><button className='btn-chart'><span role=\"img\" aria-label='laptop'>🤵</span> EXPERIENCE</button></Link>\r\n  \r\n  <Route exact path='/accuracy' render={(props) => <Horizontal {...props} data={accuracyData} />} />\r\n  <Route exact path='/work' render={(props) => <HorizontalTwo {...props} data={expData} />} />\r\n  */\r\n\r\n\r\n\r\n  async function parse(e) {\r\n    e.preventDefault();\r\n\r\n    const respond = await e.dataTransfer.files\r\n    const data = await respond[0].text();\r\n    const parseData = await data.split('\\n').slice(0, 2);\r\n    let result = [];\r\n\r\n    parseData.forEach(elem => {\r\n      let row = elem.split(',');\r\n      row = row.slice(6);\r\n      result.push(row);\r\n    });\r\n\r\n    const titles = result[0]\r\n    const vals = result[1]\r\n\r\n    setTopicsData(topicsData => topicsData.labels = titles.slice(6), topicsData.datasets[0].data = vals.slice(6))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='header'>\r\n        <div className='header-text'>\r\n          <a className='twitter' href='https://hi-van.github.io/preeepare/'>\r\n            <span className=\"emoji-logo-header\" role=\"img\" aria-label='paper'>📃 Preeepare</span>\r\n          </a>\r\n          <a className='twitter' href='https://twitter.com/Hi_Im_Van' target='_blank' rel='noopener noreferrer'>by Van S.</a>\r\n        </div>\r\n        <div className='header-div' />\r\n      </div>\r\n\r\n      <a href='https://github.com/Hi-Van/preeepare' target='_blank' rel='noopener noreferrer'>\r\n        <button className=\"to-code\">\r\n          <span className=\"emoji-logo\" role=\"img\" aria-label='paper'>📃</span>\r\n        </button>\r\n      </a>\r\n\r\n      <h1>Preeepare</h1>\r\n      <h2>Visualize your progression</h2>\r\n\r\n      <h1 className='chart-opt'>I am looking for...</h1>\r\n\r\n      <div className='btn-layout'>\r\n        <SmoothLink to=\"instructions\" smooth={true} duration={1000}><button className='btn-nav'><span role=\"img\" aria-label='papers'>📰</span> INSTRUCTIONS</button></SmoothLink>\r\n        <SmoothLink to=\"graphs\" smooth={true} duration={1000}><button className='btn-nav'><span role=\"img\" aria-label='laptop'>📈</span> VISUALIZATIONS</button></SmoothLink>\r\n        <SmoothLink to=\"info\" smooth={true} duration={1000}><button className='btn-nav'><span role=\"img\" aria-label='target'>💬</span> INFORMATION</button></SmoothLink>\r\n      </div>\r\n\r\n      <div className='spacer' id='instructions'/>\r\n      <h1 className='chart-opt'>Instructions...</h1>\r\n      <h2>1. <a className='refer-one' href='https://docs.google.com/spreadsheets/d/1h2cHK-IY5JrR5z3KY5GVl0QYzofaX6ZPeebfQx9pKG4/edit?usp=sharing' target='_blank' rel='nooopener noreferrer'>Copy</a> the provided template sheet</h2>\r\n      <img src={csheet} alt='download '/>\r\n\r\n      <h2>2. <a className='refer-two' href='https://youtu.be/ZL4XtwermIE' target='_blank' rel='nooopener noreferrer'>Download</a> sheet as CSV file</h2>\r\n      <img src={dload} alt='download '/>\r\n\r\n      <h2>3. Choose which graph you want to view</h2>\r\n      <img src={sgraph} alt='download ' />\r\n      \r\n      <h2>4. Drag and drop file into Preeepare</h2>\r\n      <img src={ddrop} alt='download ' />\r\n      \r\n      <div\r\n        className='input'\r\n        onDragOver={(e) => { e.preventDefault(); }}\r\n        onDrop={parse}\r\n      >\r\n        Drop File </div>\r\n      \r\n      <div className='spacer' id='graphs'/>\r\n      <h1 className='chart-opt'>I want to see my...</h1>\r\n\r\n      <div className='btn-layout'>\r\n        <Link to='/topics'><button className='btn-chart'><span role=\"img\" aria-label='books'>📚</span> TOPICS</button></Link>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/topics\" render={(props) => <RadarMap {...props} data={topicsData} /> } />\r\n      </Switch>\r\n\r\n      <h1 className='chart-opt' id='info'>I need more information...</h1>\r\n\r\n      <div className='btn-layout'>\r\n        <a href='https://yangshun.github.io/tech-interview-handbook/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🧾</span> TECH INTERVIEW HANDBOOK</button>\r\n        </a>\r\n\r\n        <a href='https://yangshun.github.io/front-end-interview-handbook/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🎭</span> FRONTEND INTERVIEW HANDBOOK</button>\r\n        </a>\r\n\r\n        <a href='https://www.educative.io/courses/grokking-the-coding-interview' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🔧</span> GROKKING THE CODING INTERVIEW</button>\r\n        </a>\r\n\r\n        <a href='https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>💼</span> CRACKING THE CODING INTERVIEW</button>\r\n        </a>\r\n\r\n        <a href='https://www.educative.io/courses/grokking-the-system-design-interview' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>💻</span> GROKKING THE SYSTEM INTERVIEW</button>\r\n        </a>\r\n\r\n        <a href='https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>📙</span> DESIGNING DATA INTENSIVE APPLICATIONS</button>\r\n        </a>\r\n\r\n        <a href='https://roadmap.sh/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🚘</span> DEVELOPER ROADMAPS</button>\r\n        </a>\r\n\r\n        <a href='https://education.github.com/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🎓</span> GITHUB EDUCATION</button>\r\n        </a>\r\n\r\n        <a href='https://interviewing.io/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🤝</span> PRACTICE INTERVIEWS</button>\r\n        </a>\r\n\r\n        <a href='https://leetcode.com/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>✍</span> PRACTICE QUESTIONS</button>\r\n        </a>\r\n\r\n        <a href='https://github.com/Pitt-CSC/Summer2021-Internships' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🙋‍♂️</span> FIND INTERNSHIPS</button>\r\n        </a>\r\n\r\n        <a href='https://www.udemy.com/' target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn-info'><span role=\"img\" aria-label='books'>🚀</span> FIND COURSES</button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}