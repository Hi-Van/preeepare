{"version":3,"sources":["charts/topics.js","download-csv.PNG","copy-sheet.PNG","select-graph.PNG","drag-drop.PNG","App.js","serviceWorker.js","index.js"],"names":["RadarMap","props","state","data","className","this","options","maintainAspectRatio","responsive","Component","App","useState","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","topicsData","setTopicsData","e","a","preventDefault","dataTransfer","files","respond","text","split","slice","parseData","result","forEach","elem","row","push","titles","vals","query","setQuery","test","setTest","results","Fuse","links","keys","threshold","search","linkResult","map","item","href","role","aria-label","target","rel","to","smooth","duration","id","bottom","src","csheet","alt","dload","sgraph","ddrop","onDragOver","onDrop","exact","path","render","onSubmit","evt","type","placeholder","value","onChange","card","title","link","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3864ff7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Radar } from 'react-chartjs-2';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass RadarMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"graph-wrapper\">\r\n                <Fade>\r\n                    <Radar\r\n                        data={this.state.data}\r\n                        options={{ maintainAspectRatio: true, responsive: true }}\r\n                    />\r\n                </Fade>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadarMap;","export default __webpack_public_path__ + \"static/media/download-csv.059e807a.PNG\";","export default __webpack_public_path__ + \"static/media/copy-sheet.3eb071c7.PNG\";","export default __webpack_public_path__ + \"static/media/select-graph.2a7855c1.PNG\";","export default __webpack_public_path__ + \"static/media/drag-drop.459c56d7.PNG\";","import React, { useState } from 'react';\r\nimport RadarMap from './charts/topics';\r\nimport dload from './download-csv.PNG';\r\nimport csheet from './copy-sheet.PNG';\r\nimport sgraph from './select-graph.PNG';\r\nimport ddrop from './drag-drop.PNG';\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\nimport { Link as SmoothLink } from 'react-scroll';\r\nimport links from './links.json';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Fuse from 'fuse.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [topicsData, setTopicsData] = useState(\r\n    {\r\n      labels: ['example', 'example', 'example'],\r\n      datasets: [\r\n        {\r\n          label: 'My Questions',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          pointBackgroundColor: 'rgba(255,99,132,1)',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#fff',\r\n          pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: [1, 2, 3]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  async function parse(e) {\r\n    e.preventDefault();\r\n\r\n    const respond = await e.dataTransfer.files\r\n    const data = await respond[0].text();\r\n    const parseData = await data.split('\\n').slice(0, 2);\r\n    let result = [];\r\n\r\n    parseData.forEach(elem => {\r\n      let row = elem.split(',');\r\n      row = row.slice(6);\r\n      result.push(row);\r\n    });\r\n\r\n    const titles = result[0]\r\n    const vals = result[1]\r\n\r\n    setTopicsData(topicsData => topicsData.labels = titles.slice(6), topicsData.datasets[0].data = vals.slice(6))\r\n  }\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [test, setTest] = useState('');\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setQuery(test);\r\n  }\r\n\r\n  const fuse = new Fuse(links, {\r\n    keys: [\r\n      'title',\r\n      'type'\r\n    ],\r\n    threshold: '0.35'\r\n  })\r\n\r\n\r\n  const results = fuse.search(query);\r\n\r\n  const linkResult = query ? results.map(result => result.item) : links;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='header'>\r\n        <div className='header-text'>\r\n          <a className='twitter' href='https://hi-van.github.io/preeepare/'>\r\n            <span className=\"emoji-logo-header\" role=\"img\" aria-label='paper'>ðŸ“ƒ Preeepare</span>\r\n          </a>\r\n          <a className='twitter' href='https://twitter.com/Hi_Im_Van' target='_blank' rel='noopener noreferrer'>by Van S.</a>\r\n        </div>\r\n        <div className='header-div' />\r\n      </div>\r\n\r\n      <a href='https://github.com/Hi-Van/preeepare' target='_blank' rel='noopener noreferrer'>\r\n        <button className=\"to-code\">\r\n          <span className=\"emoji-logo\" role=\"img\" aria-label='paper'>ðŸ“ƒ</span>\r\n        </button>\r\n      </a>\r\n\r\n      <h1>Preeepare</h1>\r\n      <h2>Visualize your progression</h2>\r\n\r\n      <h1 className='chart-opt'>I am looking for...</h1>\r\n\r\n      <div className='btn-layout'>\r\n        <SmoothLink to=\"instructions\" smooth={true} duration={1000}><button className='btn-nav'><span role=\"img\" aria-label='papers'>ðŸ“°</span> INSTRUCTIONS</button></SmoothLink>\r\n        <SmoothLink to=\"graphs\" smooth={true} duration={1000}><button className='btn-nav'><span role=\"img\" aria-label='laptop'>ðŸ“ˆ</span> VISUALIZATIONS</button></SmoothLink>\r\n        <SmoothLink to=\"info\" smooth={true} duration={1000}><button className='btn-nav'><span role=\"img\" aria-label='target'>ðŸ’¬</span> INFORMATION</button></SmoothLink>\r\n      </div>\r\n\r\n      <div className='spacer' id='instructions' />\r\n      <h1 className='chart-opt'>Instructions...</h1>\r\n      <Fade bottom>\r\n        <h2>1. <a className='refer-one' href='https://docs.google.com/spreadsheets/d/1h2cHK-IY5JrR5z3KY5GVl0QYzofaX6ZPeebfQx9pKG4/edit?usp=sharing' target='_blank' rel='nooopener noreferrer'>Copy</a> the provided template sheet</h2>\r\n        <img src={csheet} alt='download ' />\r\n      </Fade>\r\n\r\n      <Fade bottom>\r\n        <h2>2. <a className='refer-two' href='https://youtu.be/ZL4XtwermIE' target='_blank' rel='nooopener noreferrer'>Download</a> sheet as CSV file</h2>\r\n        <img src={dload} alt='download ' />\r\n      </Fade>\r\n\r\n      <Fade bottom>\r\n        <h2>3. Choose which graph you want to view</h2>\r\n        <img src={sgraph} alt='download ' />\r\n      </Fade>\r\n\r\n      <Fade bottom>\r\n        <h2>4. Drag and drop file into Preeepare</h2>\r\n        <img src={ddrop} alt='download ' />\r\n      </Fade>\r\n\r\n      <Fade bottom>\r\n        <div\r\n          className='input'\r\n          onDragOver={(e) => { e.preventDefault(); }}\r\n          onDrop={parse}\r\n        >\r\n          Drop File </div>\r\n      </Fade>\r\n\r\n      <div className='spacer' id='graphs' />\r\n      <h1 className='chart-opt'>I want to see my...</h1>\r\n\r\n      <div className='btn-layout'>\r\n        <Link to='/topics'><button className='btn-chart'><span role=\"img\" aria-label='books'>ðŸ“š</span> TOPICS</button></Link>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/topics\" render={(props) => <RadarMap {...props} data={topicsData} />} />\r\n      </Switch>\r\n\r\n      <h1 className='chart-opt' id='info'>I need more information...</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Search..\" value={test} onChange={e => setTest(e.target.value)} className='search' />\r\n        <input type=\"submit\" value=\"Search\" className='search-btn' />\r\n      </form>\r\n\r\n      <div className='btn-layout'>\r\n        {linkResult.map(card => {\r\n          const { title, link } = card;\r\n          return (\r\n            <a key={title} href={link} target='_blank' rel='noopener noreferrer'>\r\n              <button className='btn-info'>{title}</button>\r\n            </a>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*\r\n        */","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}